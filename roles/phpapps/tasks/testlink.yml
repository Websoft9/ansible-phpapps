---
#引入PHP运行环境元数据，并初始化
- include_vars: roles/role_php-fpm/vars/php_runtime_meta.yml

#Modify var for this playbook
- set_fact:
    testlink_vhost_dir: "{{php_runtime_meta[ansible_os_family][phpapps_webs].vhost_dir}}"
    testlink_vhost_src: "{{php_runtime_meta[ansible_os_family][phpapps_webs].vhost_src}}"
    testlink_service: "{{php_runtime_meta[ansible_os_family][phpapps_webs].service}}"
    testlink_owner: "{{php_runtime_meta[ansible_os_family][phpapps_webs].owner}}"
    testlink_name: "{{phpapps_name}}"
    testlink_title: "{{phpapps_title}}"
    testlink_download_url: "https://github.com/TestLinkOpenSourceTRMS/testlink-code.git"
    testlink_version: "1.9.20"

- debug:
    msg: runtime {{ testlink_vhost_dir }}, {{testlink_vhost_src}}, {{testlink_service}}, {{testlink_owner}}, {{ansible_distribution}}

# testlink
- name: Remove extra dir
  shell: rm -rf /data/wwwroot/*{{testlink_name}}*

- name: Create directory -1
  file:
    path: /data/wwwroot/testlink
    state: directory

- name: Create directory -2
  file:
    path: /var/testlink/logs
    state: directory
    mode: 0777

- name: Create directory -3
  file:
    path: /var/testlink/upload_area
    state: directory
    mode: 0777

- name: Download Testlink
  git:
    repo: "{{ testlink_download_url }}"
    dest: /data/wwwroot/testlink
    version: "{{ testlink_version }}"

- name: Rename dir name
  shell: cd /data/wwwroot; if [ ! -d "{{testlink_name}}" ]; then mv *{{testlink_name}}* {{testlink_name}}; fi

- name: replace my.cnf
  copy:
    src: testlink_my.cnf
    dest: /etc/my.cnf
    mode: 0755

- name: restart mysql
  service: name=mysqld state=restarted enabled=yes

- name: replace testlink_create_udf0.sql
  copy:
    src: testlink_create_udf0.sql
    dest: /data/wwwroot/testlink/install/sql/mysql/testlink_create_udf0.sql
    mode: 0755

- name: Import file.sql similar to mysql -u <username> -p <password> < hostname.sql
  mysql_db:
    login_user: root
    login_password: "{{mysql_root_password}}"
    state: import
    name: testlink
    target: /data/wwwroot/testlink/install/sql/mysql/testlink_create_udf0.sql

- name: Copy php.ini
  copy: src=testlink_php.ini dest=/etc/php.ini

- name: Copy Apache or Nginx vhost configuration
  template: src={{testlink_vhost_src}} dest={{testlink_vhost_dir}}
